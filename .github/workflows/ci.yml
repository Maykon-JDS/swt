name: Continuous Integration Pipeline

# This will run every time we create push a commit to `main`.
# Reference: https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows
on:
  workflow_dispatch:
  push:
    branches:
      - main
      # - develop

# Reference: https://docs.github.com/en/actions/security-guides/automatic-token-authentication
# permissions:
  # Need `contents: read` to checkout the repository.
  # Need `contents: write` to update the step metadata.
#   contents: write

jobs:
  # Get the current step to only run the main job when the learner is on the same step.
#   setup_project:
#     # if: >-
#     #   ${{ !github.event.repository.is_template
#     #       && needs.format_code.outputs.current_step == 0 }}
#     name: Setup Project
#     runs-on: ubuntu-latest
#     steps:
#         - uses: actions/checkout@v4
#           with:
#            fetch-depth: 0 # Let's get all the branches.
#         - uses: actions/setup-node@v4
#           with:
#            node-version: 20 # Let's get all the branches.
#         - run: npm install
  format_code:
    # if: >-
    #   ${{ !github.event.repository.is_template
    #       && needs.format_code.outputs.current_step == 0 }}
    # needs: setup_project
    name: Format Code
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4
          with:
           fetch-depth: 0 # Let's get all the branches.
        - uses: actions/setup-node@v4
          with:
           node-version: 20 # Let's get all the branches.
        - run: |
            BRANCH=main
            git checkout $BRANCH
            npm install
    #   - name: Checkout
    #     uses: actions/checkout@v4
    #     with:
    #       fetch-depth: 0 # Let's get all the branches.
    #   - id: format_code
        # run: |
        #   echo "current_step=$(cat ./.github/steps/-step.txt)" >> $GITHUB_OUTPUT
    # outputs:
    #   current_step: ${{ steps.format_code.outputs.current_step }}
        - name: Setup Git Config
          run: |
            git config user.name github-actions[bot]
            git config user.email github-actions[bot]@users.noreply.github.com
          env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        - name: Format Code
          run: |
            npm run format
            git add .
            git commit -m "format code"
          env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   on_start:
#     name: On start
#     needs: get_current_step

    # We will only run this action when:
    # 1. This repository isn't the template repository.
    # 2. The step is currently 0.
    # Reference: https://docs.github.com/en/actions/learn-github-actions/contexts
    # Reference: https://docs.github.com/en/actions/learn-github-actions/expressions
    # if: >-
    #   ${{ !github.event.repository.is_template
    #       && needs.get_current_step.outputs.current_step == 0 }}

    # We'll run Ubuntu for performance instead of Mac or Windows.
    # runs-on: ubuntu-latest

    # steps:
    #   # We'll need to check out the repository so that we can edit the README.
    #   - name: Checkout
    #     uses: actions/checkout@v4
    #     with:
    #       fetch-depth: 0 # Let's get all the branches.

      # Make a branch, file, and commit for the learner.
    #   - name: Prepare a branch, and file
    #     run: |
    #       echo "Make sure we are on step 0"
    #       if [ "$(cat .github/steps/-step.txt)" != 0 ]
    #       then
    #         echo "Current step is not 0"
    #         exit 0
    #       fi

    #       echo "Make a branch"
    #       BRANCH=welcome-workflow
    #       git checkout -b $BRANCH

    #       echo "Make a commit"
    #       git config user.name github-actions[bot]
    #       git config user.email github-actions[bot]@users.noreply.github.com
    #       git commit --allow-empty --message="Create an empty commit"

    #       echo "Push"
    #       git push --set-upstream origin $BRANCH

    #       echo "Restore main"
    #       git checkout main
    #     env:
    #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    #   # In README.md, switch step 0 for step 1.
    #   - name: Update to step 1
    #     uses: skills/action-update-step@v2
    #     with:
    #       token: ${{ secrets.GITHUB_TOKEN }}
    #       from_step: 0
    #       to_step: 1
    #       branch_name: welcome-workflow